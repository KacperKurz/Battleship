[{"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/reportWebVitals.js":"1","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/App.js":"2","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Lobby.js":"3","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/index.js":"4","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Game.js":"5","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Setup.js":"6","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Turn.js":"7","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Spectate.js":"8","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Chats.js":"9","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/PrivateChat.js":"10","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/PublicChat.js":"11"},{"size":362,"mtime":1609781476420,"results":"12","hashOfConfig":"13"},{"size":404,"mtime":1612119897445,"results":"14","hashOfConfig":"15"},{"size":2020,"mtime":1612130722627,"results":"16","hashOfConfig":"15"},{"size":500,"mtime":1610144111646,"results":"17","hashOfConfig":"15"},{"size":270,"mtime":1610961216814,"results":"18","hashOfConfig":"15"},{"size":2712,"mtime":1611771696322,"results":"19","hashOfConfig":"13"},{"size":4087,"mtime":1612098430847,"results":"20","hashOfConfig":"15"},{"size":3350,"mtime":1612103681129,"results":"21","hashOfConfig":"15"},{"size":930,"mtime":1612132000378,"results":"22","hashOfConfig":"15"},{"size":2626,"mtime":1612130545806,"results":"23","hashOfConfig":"15"},{"size":1563,"mtime":1612133026116,"results":"24","hashOfConfig":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l3ypi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1emnrbp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/reportWebVitals.js",[],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/App.js",[],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Lobby.js",[],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/index.js",[],["50","51"],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Game.js",[],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Setup.js",["52","53"],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Turn.js",["54","55","56"],"import {useState} from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\"\n\n\n\nfunction Turn(props){\n    const [turn,setTurn]=useState(<div className={\"main\"} style={{color: \"green\"}}>Your turn</div>)\n   const initialGuess=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n    const generateBoard = (input)=>{\n        let fields=[]\n        input.map(state=>{\n            switch (state){\n                case 0:\n                    fields.push(\n                        <button className={\"empty\"} disabled></button>\n                    )\n                    break\n                case 1:\n                    fields.push(\n                        <button className={\"ship\"} disabled></button>\n                    )\n                    break\n                case 2:\n                    fields.push(\n                        <button className={\"guessedEmpty\"} disabled></button>\n                    )\n                    break\n                case 3:\n                    fields.push(\n                        <button className={\"guessedShip\"} disabled></button>\n                    )\n                    break\n            }\n        })\n        return fields\n    }\n\n    const generateButtons = (input,disabled=false)=>{\n        // console.log(guesses)\n        let buttons=[]\n        for (let i=0;i<100;++i){\n            switch (input[i]){\n                case 0:\n                    buttons.push(\n                        <button class={\"empty\"} disabled={disabled} onClick={()=>playTurn(i)}></button>\n                    )\n\n                    break\n                case 1:\n                    buttons.push(\n                        <button class={\"guessedEmpty\"} disabled={true}></button>\n                    )\n                    break\n                case 2:\n                    buttons.push(\n                        <button class={\"guessedShip\"} disabled={true}></button>\n                    )\n                    break\n            }\n        }\n        return buttons\n    }\n\n    const [buttons,setButtons]=useState(generateButtons(initialGuess))\n    const [disabledButtons,setDisabledButtons]=useState(generateButtons(initialGuess,true))\n    const [boardDisplay,setBoardDisplay]=useState(generateBoard(props.board))\n    const [disableButtons,setDisableButtons]=useState(false)\n\n    const playTurn = (field)=>{\n        setDisableButtons(true)\n        setTurn(<div className={\"main\"} style={{color: \"red\"}}>Enemy turn</div>)\n        axios.patch(\"http://192.168.0.6:3030/\"+String(field),{\n            id: props.id,\n            player: props.player,\n        }).then((res)=>{\n            if (res.data===\"You won!\" || res.data===\"You lost!\"){\n                setTurn(res.data)\n            }\n            else{\n                setTurn(<div className={\"main\"} style={{color: \"green\"}}>Your turn</div>)\n                setBoardDisplay(generateBoard(res.data.board))\n                setButtons(generateButtons(res.data.guess))\n                setDisabledButtons(generateButtons(res.data.guess,true))\n                setDisableButtons(false)\n            }\n\n        })\n    }\n\n\n\n\n    return  <>\n    <div className={\"main\"}>\n        {turn}\n        <div className=\"flex\">\n            <div className=\"grid\">\n            {disableButtons?disabledButtons:buttons}\n            </div>\n            <div className=\"grid\">\n                {boardDisplay}\n            </div>\n            <div className={\"legend\"}>Legend:\n                <ul>\n                    <li style={{color: \"lightgray\"}}>Empty field</li>\n                    <li style={{color: \"blue\"}}>Your ship</li>\n                    <li style={{color: \"black\"}}>Missed Ship</li>\n                    <li style={{color: \"red\"}}>Hit Ship</li>\n                </ul>\n\n            </div>\n        </div>\n    </div>\n    <div className={\"flex\"}>\n        <div className={\"main\"}>Enemy's board</div>\n        <div className={\"main\"}>Your board</div>\n        <div></div>\n    </div>\n        </>\n\n}\n\nexport default Turn","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Spectate.js",["57","58"],"import {useState} from \"react\";\nimport axios from \"axios\";\n\nfunction Spectate(props){\n    const [turn,setTurn]=useState(\"player1\")\n    const [turnDisplay,setTurnDisplay]=useState(<div className={\"main\"}>Player 1</div>)\n    const [launch,setLaunch]=useState(true)\n    const initialGuess=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n\n    const generateBoard = (input)=>{\n        let fields=[]\n        input.map(state=>{\n            switch (state){\n                case 0:\n                    fields.push(\n                        <button className={\"empty\"} disabled></button>\n                    )\n                    break\n                case 1:\n                    fields.push(\n                        <button className={\"ship\"} disabled></button>\n                    )\n                    break\n                case 2:\n                    fields.push(\n                        <button className={\"guessedEmpty\"} disabled></button>\n                    )\n                    break\n                case 3:\n                    fields.push(\n                        <button className={\"guessedShip\"} disabled></button>\n                    )\n                    break\n            }\n        })\n        return fields\n    }\n\n    const turnSetter = ()=>{\n        const curTurn=turn\n        if (turn===\"player1\"){\n            setTurn(\"player2\")\n        }\n        else{\n            setTurn(\"player1\")\n        }\n        return <div className={\"main\"}>{curTurn===\"player1\"?\"Player 1\":\"Player 2\"}</div>\n    }\n\n    const [board1,setBoard1]=useState(generateBoard(initialGuess))\n    const [board2,setBoard2]=useState(generateBoard(initialGuess))\n\n    const playTurn = ()=>{\n        axios.post(\"http://192.168.0.6:3030/spectate\",{\n            id: props.id\n        }).then((res)=>{\n            if (res.data===\"Player 1 won!\" || res.data===\"Player 2 won!\"){\n                setTurnDisplay(<div className={\"main\"}>{res.data}</div>)\n            }\n            else{\n                setTurnDisplay(turnSetter())\n                setBoard1(generateBoard(res.data.player1.board))\n                setBoard2(generateBoard(res.data.player2.board))\n            }\n            playTurn()\n        })\n\n    }\n\n    if (launch){\n        setLaunch(false)\n        playTurn()\n    }\n\n    return  <>\n        <div className={\"main\"}>\n            {turnDisplay}\n            <div className=\"flex\">\n                <div className=\"grid\">\n                    {board1}\n                </div>\n                <div className=\"grid\">\n                    {board2}\n                </div>\n                <div className={\"legend\"}>Legend:\n                    <ul>\n                        <li style={{color: \"lightgray\"}}>Empty field</li>\n                        <li style={{color: \"blue\"}}>Your ship</li>\n                        <li style={{color: \"black\"}}>Missed Ship</li>\n                        <li style={{color: \"red\"}}>Hit Ship</li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n        <div className={\"flex\"}>\n            <div className={\"main\"}>Player's 1 board</div>\n            <div className={\"main\"}>Player's 2 board</div>\n            <div></div>\n        </div>\n    </>\n}\n\nexport default Spectate","/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/Chats.js",[],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/PrivateChat.js",[],"/home/kacper/Documents/git/psw/kurz-kacper/Battleship/client/src/PublicChat.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":23,"column":22,"nodeType":"65","messageId":"66","endLine":23,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":49,"column":55,"nodeType":"69","messageId":"70","endLine":49,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":13,"column":24,"nodeType":"65","messageId":"66","endLine":13,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":14,"column":13,"nodeType":"73","messageId":"74","endLine":35,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":44,"column":13,"nodeType":"73","messageId":"74","endLine":61,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":13,"column":24,"nodeType":"65","messageId":"66","endLine":13,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":14,"column":13,"nodeType":"73","messageId":"74","endLine":35,"endColumn":14},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]